<!-- we can write html as well as js code here inside the ejs file -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <input hidden id="startchat" data-roomid="<%= id %>"></input>
    <input type="text" id="username" placeholder="user name...">
    <input type="text" id="newmsg" placeholder="message...">
    <button id="btn">Send</button>

    <ul id="msglist">
        <% for(let i = 0; i < chats.length; i++) { %>
            <li><%= chats[i].user %> : <%= chats[i].content %></li>
        <% } %>
    </ul>

    <script src="/socket.io/socket.io.js"></script>
    <script>
        var socket = io(); 
        let startchat = document.getElementById('startchat');
        let btn = document.getElementById('btn');
        let inputMsg = document.getElementById('newmsg');
        let username = document.getElementById('username');
        let msgList = document.getElementById('msglist');

        socket.emit('join_room', {
                roomid: startchat.getAttribute('data-roomid')
        })  // we gonna immediattely join as soon we refresh the page

        btn.onclick = function exec() {
            socket.emit('msg_send', {   //we can also send our msg with the emitted event
                msg: inputMsg.value,
                username: username.value,
                roomid: startchat.getAttribute('data-roomid')
            })
        }

        startchat.onclick = function exec(){
            socket.emit('join_room', {
                roomid: startchat.getAttribute('data-roomid')
            })
        }

        socket.on('msg_rcvd', (data) => {
            let limsg = document.createElement('li');
            limsg.innerText = `${data.username} : ${data.msg}`;
            msgList.appendChild(limsg);
        })
    </script>
</body>
</html>